With the latest versions of Spring Boot (2.3+), the H2 database name is randomly 
generated each time you restart the server.
You can find the database name and URL from the console log.

RECOMMENDED: 
Make the database URL a constant by configuring this in application.properties.

spring.datasource.url=jdbc:h2:mem:testdb
spring.data.jpa.repositories.bootstrap-mode=default

Note : 
 spring.data.jpa.repositories.bootstrap-mode has been reverted to default 
 since spring boot 2.4.1.


#enable h2 console in application.properties
spring.h2.console.enabled=true
#access h2 console in browser  http://localhost:8080/h2-console/
saved settings and setting name : Generic H2 (Embedded)
Driver class : org.h2.Driver
jdbc url: jdbc:h2:mem:testdb [take db name from console log as its random now]
jdbc url: jdbc:h2:mem:2b542688-605e-4f5e-b5ed-40f62987edf4
username: sa
password keep empty

Note in console log 
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:2b542688-605e-4f5e-b5ed-40f62987edf4'

Unable to login into H2 Console
=================================
https://github.com/in28minutes/in28minutes-initiatives/blob/master/The-in28Minutes-TroubleshootingGuide-And-FAQ/jpa-and-hibernate.md
Are you using >=2.3.0 Release of Spring Boot? You would need to configure this in application.properties.
spring.datasource.url=jdbc:h2:mem:testdb
Why is this needed? With the latest versions of Spring Boot (2.3+), the H2 database name is randomly 
generated each time you restart the server. We do NOT want that. We want a constant URL.




to have jdbc url: to be jdbc:h2:mem:testdb mention below properties in application.properties
=================================================================================================

spring.datasource.url=jdbc:h2:mem:testdb
spring.data.jpa.repositories.bootstrap-mode=default

data.sql file is used to initialize database
========================================================
NEW CONFIG for data.sql - Spring Boot 2.5.0 or Greater
Summary
If you are using Spring Boot 2.5.0 or Greater, you need to:
1) Add the following property to application.properties
spring.jpa.defer-datasource-initialization=true

Hibernate and data.sql
======================
By default, data.sql scripts are now run before Hibernate is initialized. This aligns the behaviour of 
basic script-based initialization with that of Flyway and Liquibase. If you want to use data.sql to 
populate a schema created by Hibernate, set spring.jpa.defer-datasource-initialization to true. 
While mixing database initialization technologies is not recommended, this will also allow you to use 
a schema.sql script to build upon a Hibernate-created schema before itâ€™s populated via data.sql.

https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes#bootstrapmode-for-jpa-repositories
Unique DataSource Name By Default
By default, a unique name is generated on startup for the auto-configured DataSource. This impacts the use of the H2 console as the database URL no longer refers to testdb.

You can disable this behavior by setting 
spring.datasource.generate-unique-name to false.